// ----- GRID MIXINS ----- //
//e.g. .hxCol-1, .hxCol-md-8, .hxCol-lg-12
.make-grid-columns (@prefix, @n) when (@n > 0) and (@prefix = xs) {
  .hxCol-@{prefix}-@{n},
  .hxCol-@{n} {
    @width: (@n * @grid-column-unit);
    flex: 0 0 @width;
    max-width: @width;
  }
  .make-grid-columns(@prefix, (@n - 1));
}
.make-grid-columns (@prefix, @n) when (@n > 0) and not (@prefix = xs) {
  .hxCol-@{prefix}-@{n} {
    @width: (@n * @grid-column-unit);
    flex: 0 0 @width;
    max-width: @width;
  }
  .make-grid-columns(@prefix, (@n - 1));
}

//e.g. .hxOffset-1, .hxOffset-md-3, .hxOffset-lg-0
.make-grid-offsets (@prefix, @n) when (@n >= 0) and (@prefix = xs) {
  .hxOffset-@{prefix}-@{n},
  .hxOffset-@{n} {
    margin-left: (@n * @grid-column-unit) !important;
  }
  .make-grid-offsets(@prefix, (@n - 1));
}
.make-grid-offsets (@prefix, @n) when (@n >= 0) and not (@prefix = xs) {
  .hxOffset-@{prefix}-@{n} {
    margin-left: (@n * @grid-column-unit) !important;
  }
  .make-grid-offsets(@prefix, (@n - 1));
}

//e.g. .hxOrder-1, .hxOrder-md-4
.make-grid-orders (@prefix, @n) when (@n > 0) and (@prefix = xs) {
  .hxOrder-@{prefix}-@{n},
  .hxOrder-@{n} {
    order: @n;
  }
  .make-grid-orders(@prefix, (@n - 1));
}
.make-grid-orders (@prefix, @n) when (@n > 0) and not (@prefix = xs) {
  .hxOrder-@{prefix}-@{n} {
    order: @n;
  }
  .make-grid-orders(@prefix, (@n - 1));
}

.make-grid (@prefix) {
  // 1 to N
  .make-grid-columns(@prefix, @grid-column-count);
  // 0 to N
  .make-grid-offsets(@prefix, @grid-column-count);
  // 1 to N
  .make-grid-orders(@prefix, @grid-column-count);
}
//end:mixins

/* ===== GRID ===== */
@col-padding: (@grid-gutter-size * 0.5);
@row-margin: -(@col-padding);

.hxCol,
[class*="hxCol-"] {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}
.hxRow {
  border: 0;
  display: flex;
  flex-wrap: wrap;
  margin: 0 @row-margin -(@grid-gutter-size);
  padding: 0;

  & + &:not(.no-gutters) {
    margin-top: @grid-gutter-size;
  }

  .hxCol,
  [class*="hxCol-"] {
    padding: 0 @col-padding;
    margin: 0 0 @grid-gutter-size;
  }

  &.no-gutters {
    margin-left: 0;
    margin-right: 0;

    .hxCol,
    [class*="hxCol-"] {
      margin: 0;
      padding-left: 0;
      padding-right: 0;
    }
  }
}

@media (min-width: @grid-break-wrist) {
  .make-grid(xs);
}
@media (min-width: @grid-break-palm) {
  .make-grid(sm);
}
@media (min-width: @grid-break-lap) {
  .make-grid(md);
}
@media (min-width: @grid-break-desk) {
  .make-grid(lg);
}
@media (min-width: @grid-break-wall) {
  .make-grid(xl);
}
/* ===== end:GRID ===== */
